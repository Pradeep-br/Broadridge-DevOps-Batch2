DevOps Complete Workflow
DevOps in Cloud
DevOps
	Imm Release
	Quality Redefined
	Cost Reduction

https://www.devopsschool.com/videos/387/complete-cicd-devops-implementation-from-

scratch-using-jenkins-by-devopsschool/
=================================================================
Prod - BroadX
Mgmr - Mgrx..

------------------------
Hiring - 
	Architect --- JIRA - Confluence
	DEV TEam - 10 FEA - 10 DEV
		Code Integ - Git
		Code Review
			Peer 
			Static - SonarQube
		Build - Maven - Ant - 
		UT - junit 
		Packaging - 
			SYSTEm
			APP - 
		Artifact mgmt - Nexus,
		---------------------------------
		Deployment 2 QA - INT - PRE PRO - PROD
		
		BroadX4.5 ----> 100 BOXES
		----------------------
		50 DEP - 50 L
		50 AP - 50 NG
		25 JB - 25 WL 0- 25 TO - 25 WS
		25 MYSQ 25 MSSQL25 ORA 25 PS
	`	100 DIFF
			-----------
		1 Dep - 9 mins
		100 Dep - 9 min?
		----------------------------
			Parrell
		COding - Chef - Ansible - Puppt - Salt
		UI - Octopus Deploy - Udeploy

		=============================================
		Container - Dcoker
		

		AT

		code Coverage

		Release
========================================================================================

==========
PLAN -> Code -> review -> UT -> Pack -> Archive -> Deploy2Qa+AT+CC -> Release
------------------------------------------------------------------------------
JIRA -> Git  -> SonarQube ->Junit-> Jar-> Nexus -> Chef-Sel-Jacoc ->>
========================================================================================

===============
					INTEGRATION
							JENKINS


			CD		-  Cont Delivery
			CD		-  Cont Deployment
		
GIT
NEXUS
JENINS
Docker
Terraform
Chef
=====================================
https://www.devopsschool.com/path
===================================================================================

What is Git?
	It is a repo?
	Version control
		for Source Code
	FREE tool
	Open Source
	Written by Linus
	DISTRIBUTED
	-------------------

Why git?
	You want to know...
			WHO 
			WHEN
			WHY
			WHERE
			WHAT 
	
Other tools
	RCS --> CVS -> SVN -> GIT
	VSS -> ClearCase -> Perforce -> Mercury -> TFS

========================================
DISTRIBUTED	VS SERVER_CLIENT
============================================================
How to install git?
	WINDOWS
		EXE
		-----
			git bash == Support basic linux comm + Color
		https://git-scm.com/
		NUGET
		CHOCLATE
	LINUX
		RHEL  - yum install git
		UB  - apt-get install git
	MAC 
		DMG 
			

Step 1 - Regiter at github.com and Verify Account
Step 2- Fill this form http://bit.ly/2p3HAVO

=============================================================
Basic Workflow with Git?
=======================================
Step 1- Create repo
$ git init

Step 2 - Write a Source Code

Step 3 - Add to git[From Working dir to Staging]
$ git add file1.txt

ONE TIME - 
============.git/config=====================
git config user.name "Rajesh Kumar"
git config user.email "devops@rajeshkumar.xyz"
git config --list

Step 4 - Commit to Git [From Staging  to Repo]
git commit -m"Adding my first commit"

Step 5 - See the history of 
$ git log

        	WHO 
			WHEN
			WHY
			WHERE
			WHAT 

Step 6 - Do you want to know changes done in WORKING dir - or Staging
$ git status


500  cd /e
  501  mkdir broadridge
  502  ls
  503  start .
  504  cd broadridge/
  505  clear
  506  mkdir repo1
  507  cd repo1/
  508  clear
  509  ls
  510  git init
  511  ls
  512  la -la
  513  ls -la
  514  start .
  515  clear
  516  touch file1.txt
  517  ls
  518  start .
  519  ls
  520  clear
  521  git add file1.txt
  522  git config user.name "Rajesh Kumar"
  523  git config user.email "devops@rajeshkumar.xyz"
  524  clear
  525  git config --list
  526  clear
  527  more .git/config
  528  cat .git/config
  529  clear
  530  clear
  531  git commit -m"Adding my first commit"
  532  git log
  533  ls
  534  git show d7f21a2401d85f584d46b762e529e7f077044f10
  535  history
536  clear
  537  git status
  538  ls
  539  git add file2.txt
  540  git status
  541  vi file1.txt
  542  git status
  543  git commit -m"adding"
  544  git status
  545  git add .
  546  git status
  547  git commit -m"adding"
  548  history













